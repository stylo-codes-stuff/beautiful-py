//WIP Javascript grammar adapted from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Lexical_grammar
//If I miss anything or an error occurs when using this grammar, please make an issue!
// BUT before making an issue please make sure it's not due to an error or formatting issue in your code
%import common.WS
%import common.WORD


file_input: (comment|compound_stmt|simple_stmt)*
//comments
comment: (hashbang|line_comment|block_comment)
hashbang: /#![^\n]*/
line_comment: /\/\/[^\n]*/
block_comment: "/*" WORD* "*/"

// compound statements
compound_stmt: (func_def)
func_def: "function" name "(" args ")" "{" (simple_stmt|compound_stmt)* "}"

// simple statements
simple_stmt: (func_call|var_declaration) 
var_declaration: ("const"|"var"|"let") name "=" type ";"
func_call: (WORD|".")* "(" (args|operator)* ")"

//operators
operator: ("+"|"-"|"/")
//other
!type: (string|integer|boolean|name)
string: "\"" name+ "\""
integer: "0".."9"
boolean: ("true"|"false")
name.-1: /[\w\d]+/
args : (name|",")*
%ignore WS

//use this rule for when you need to define something without using it
placeholder_rule: "placeholder_rule"